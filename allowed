local ALLOWED_HWIDS = {
    ["HWID_12345678"] = true
}

local function GetRealHWID()
    local hwid_components = {}
    
    -- Функция безопасного добавления идентификаторов
    local function try_add(id_name, get_func)
        local success, value = pcall(get_func)
        if success and value and tostring(value) ~= "" then
            table.insert(hwid_components, id_name..":"..tostring(value))
        end
    end

    -- Пытаемся получить различные идентификаторы
    try_add("ClientId", function() return game:GetService("RbxAnalyticsService"):GetClientId() end)
    try_add("HardwareId", function()
        if syn and syn.get_hwid then return syn.get_hwid() end
        if get_hwid then return get_hwid() end
        return nil
    end)

    -- Если не получили ни одного ID - создаем случайный
    if #hwid_components == 0 then
        table.insert(hwid_components, "FallbackId:"..tostring(math.random(10000,99999)))
    end

    -- Генерируем финальный HWID
    local raw_hwid = table.concat(hwid_components, "||")
    local function secure_hash(s)
        local h = 5381
        for i = 1, #s do 
            h = (h * 33 + string.byte(s, i)) % 2^32 
        end
        return string.format("%08X", h)
    end
    
    return "HWID_"..secure_hash(raw_hwid)
end

local function StrictHWIDCheck()
    -- Получаем HWID игрока
    local playerHWID = GetRealHWID()
    
    -- Проверяем наличие в списке разрешенных
    if not ALLOWED_HWIDS[playerHWID] then
        -- Немедленный кик без GUI
        game:GetService("Players").LocalPlayer:Kick("HWID is not authorized: "..playerHWID)
    end
end

-- Запускаем проверку
StrictHWIDCheck()
